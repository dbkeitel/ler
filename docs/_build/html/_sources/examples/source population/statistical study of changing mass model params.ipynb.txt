{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Statistical study of changing Mass model paramter(s) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* In this notebook I will show the effect of changing mass model parameter on the detectable gravitational waves (GW) event rates per year\n",
    "\n",
    "### Binary Black Hole (BBH) Mass Model\n",
    "\n",
    "* I will use the power-law+peak mass model and change the slope of the power-law component ($\\alpha$) on the mass function.\n",
    "\n",
    "* Here is the default parameters and resultant distribution of the chosen mass model:\n",
    "\n",
    "<table>\n",
    "<tr>\n",
    "<td>\n",
    "\n",
    "| Parameter            | Value  |\n",
    "|----------------------|--------|\n",
    "| $m_{\\text{minbh}}$   | 4.98   |\n",
    "| $m_{\\text{maxbh}}$   | 112.5  |\n",
    "| $\\alpha$             | 3.78   |\n",
    "| $\\mu_g$              | 32.27  |\n",
    "| $\\sigma_g$           | 3.88   |\n",
    "| $\\lambda_{\\text{peak}}$ | 0.03 |\n",
    "| $\\delta_m$           | 4.8    |\n",
    "| $\\beta$              | 0.81   |\n",
    "\n",
    "</td>\n",
    "<td>\n",
    "\n",
    "![mass_bbh](../../_static/bbh_mass.png)\n",
    "\n",
    "</td>\n",
    "</tr>\n",
    "</table>\n",
    "\n",
    "### Binary Neutron Star (BNS) Mass Model\n",
    "\n",
    "* The mass distribution of neutron stars in binary neutron star (BNS) systems can be characterized by a bimodal distribution, which can be modeled using a double Gaussian distribution. Each normal distribution is independently truncated and normalized in the range [1, 2.3] $M_{\\odot}$, ensuring that the neutron star masses are within the physically plausible range. \n",
    "\n",
    "*  This bimodal distribution is thought to reflect the different evolutionary paths that neutron stars can take. For more details, refer to [Alsing et al. 2018](https://arxiv.org/pdf/1805.06442.pdf) and [M. Farr et al. 2020](https://arxiv.org/pdf/2005.00032.pdf).\n",
    "\n",
    "* I will change the maximum cut ($m_{\\text{max}}$) on the mass function.\n",
    "\n",
    "* Here is the default parameters and resultant distribution of the chosen mass model:\n",
    "\n",
    "<table>\n",
    "<tr>\n",
    "<td>\n",
    "\n",
    "| Parameter   | Value            |\n",
    "|-------------|------------------|\n",
    "| $w$         | 0.643            |\n",
    "| $\\mu_L$     | 1.352 $M_{\\odot}$|\n",
    "| $\\sigma_L$  | 0.08 $M_{\\odot}$ |\n",
    "| $\\mu_R$     | 1.88 $M_{\\odot}$ |\n",
    "| $\\sigma_R$  | 0.3 $M_{\\odot}$  |\n",
    "| $m_{\\text{max}}$ | 2.3 $M_{\\odot}$ |\n",
    "\n",
    "</td>\n",
    "<td>\n",
    "\n",
    "![mass_bns](../../_static/bns_mass.png)\n",
    "\n",
    "</td>\n",
    "</tr>\n",
    "</table>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## BBH"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from ler.rates import GWRATES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # initialization\n",
    "ler = GWRATES(verbose=False, event_type='BBH')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* When `LeR` class is initialized, the mass model is created with the default parameters. This is in the form of a interpolation and the parameters are fixed.\n",
    "\n",
    "* I will change the function of the mass model with a default power-law+peak mass model and change the maximum cut ($m_{\\text{maxbh}}$) on the mass function.\n",
    "\n",
    "* Below I will providing an example. But first let me show you which models are available in the `ler`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['merger_rate_density', 'source_frame_masses', 'zs', 'spin', 'geocent_time', 'ra', 'phase', 'psi', 'theta_jn'])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ler.available_gw_prior_list_and_its_params.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'binary_masses_BBH_popI_II_powerlaw_gaussian': {'mminbh': 4.98,\n",
       "  'mmaxbh': 112.5,\n",
       "  'alpha': 3.78,\n",
       "  'mu_g': 32.27,\n",
       "  'sigma_g': 3.88,\n",
       "  'lambda_peak': 0.03,\n",
       "  'delta_m': 4.8,\n",
       "  'beta': 0.81},\n",
       " 'binary_masses_BBH_popIII_lognormal': {'Mc': 30.0, 'sigma': 0.3, 'beta': 1.1},\n",
       " 'binary_masses_BBH_primordial_lognormal': {'Mc': 30.0,\n",
       "  'sigma': 0.3,\n",
       "  'beta': 1.1},\n",
       " 'binary_masses_BNS_gwcosmo': {'mminns': 1.0, 'mmaxns': 3.0, 'alphans': 0.0},\n",
       " 'binary_masses_BNS_bimodal': {'w': 0.643,\n",
       "  'muL': 1.352,\n",
       "  'sigmaL': 0.08,\n",
       "  'muR': 1.88,\n",
       "  'sigmaR': 0.3,\n",
       "  'mmin': 1.0,\n",
       "  'mmax': 2.3}}"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ler.available_gw_prior_list_and_its_params['source_frame_masses']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* changing mass function parameter $\\alpha$ for sampling. Considered values are,\n",
    "  * $\\alpha = 3.78$: default value, from [GWTC-3 2021](https://arxiv.org/pdf/2111.03604.pdf) (page-23)\n",
    "  * $\\alpha = 2.63$: from [WIERDA et al. 2021](https://arxiv.org/pdf/2106.06303.pdf) (Appendix B)\n",
    "\n",
    "* you can have only 'size' as input parameter\n",
    "\n",
    "* These mass function returns the mass of the binary black hole in the unit of solar mass ($m_1$, $m_2$)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# with default value\n",
    "ler.sample_source_frame_masses = lambda size: ler.binary_masses_BBH_popI_II_powerlaw_gaussian(size=size, alpha=3.78)\n",
    "\n",
    "# plot \n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.hist(ler.sample_source_frame_masses(10000)[0], bins=100, histtype='step', color='k', density=True, label='alpha=3.78')\n",
    "\n",
    "# with custom value\n",
    "ler.sample_source_frame_masses = lambda size: ler.binary_masses_BBH_popI_II_powerlaw_gaussian(size=size, alpha=2.63)\n",
    "\n",
    "# plot\n",
    "plt.hist(ler.sample_source_frame_masses(10000)[0], bins=100, histtype='step', color='r', density=True, label='alpha=2.63')\n",
    "plt.xlabel(r'$m_1$ (Bigger mass of the binary in $M_{\\odot}$)')\n",
    "plt.ylabel('pdf')\n",
    "\n",
    "plt.legend()\n",
    "plt.grid(alpha=0.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* let's make a range of $\\alpha$ between the two values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Calculation of rates (per year)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " iteration:  0\n",
      "gw rate per year (alpha=2.63): 602.399735152594\n",
      "\n",
      " iteration:  1\n",
      "gw rate per year (alpha=2.7577777777777777): 583.6620908730581\n",
      "\n",
      " iteration:  2\n",
      "gw rate per year (alpha=2.8855555555555554): 541.7353177613893\n",
      "\n",
      " iteration:  3\n",
      "gw rate per year (alpha=3.013333333333333): 516.4757309978161\n",
      "\n",
      " iteration:  4\n",
      "gw rate per year (alpha=3.141111111111111): 500.0155904428646\n",
      "\n",
      " iteration:  5\n",
      "gw rate per year (alpha=3.2688888888888887): 490.69852975138264\n",
      "\n",
      " iteration:  6\n",
      "gw rate per year (alpha=3.3966666666666665): 471.8573625752747\n",
      "\n",
      " iteration:  7\n",
      "gw rate per year (alpha=3.5244444444444443): 465.12837429809326\n",
      "\n",
      " iteration:  8\n",
      "gw rate per year (alpha=3.652222222222222): 447.6330047774216\n",
      "\n",
      " iteration:  9\n",
      "gw rate per year (alpha=3.78): 430.13763525675\n"
     ]
    }
   ],
   "source": [
    "alpha_arr = np.linspace(2.63, 3.78, 10)\n",
    "gw_rates = np.zeros_like(alpha_arr)\n",
    "sample_size = 1000000  # increase the sample size to 1 million for better statistics\n",
    "ler.batch_size = 100000\n",
    "\n",
    "# let's suppress some of the print outputs\n",
    "import contextlib\n",
    "\n",
    "for i, alpha in enumerate(alpha_arr):\n",
    "    print(\"\\n iteration: \", i)\n",
    "    ler.sample_source_frame_masses = lambda size: ler.binary_masses_BBH_popI_II_powerlaw_gaussian(size=size, alpha=alpha)\n",
    "\n",
    "    # un-lensed\n",
    "    with contextlib.redirect_stdout(None):  # suppress print output\n",
    "        ler.gw_cbc_statistics(size=sample_size);\n",
    "        rate,_ = ler.gw_rate(output_jsonfile=\"gw_param_detectable_\"+str(i)+\".json\")\n",
    "    gw_rates[i] = rate\n",
    "    print(f'gw rate per year (alpha={alpha}): {rate}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gw rate: slope=-143.657045929216, intercept=965.3951693918017, r_value=-0.9795941702168517, p_value=7.401514058755967e-07, std_err=10.420797560559112\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# linear fit to the rates\n",
    "from scipy.stats import linregress\n",
    "\n",
    "slope, intercept, r_value, p_value, std_err = linregress(alpha_arr, gw_rates)\n",
    "print(f'gw rate: slope={slope}, intercept={intercept}, r_value={r_value}, p_value={p_value}, std_err={std_err}')\n",
    "\n",
    "\n",
    "# gw_rates vs alpha\n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.plot(alpha_arr, gw_rates, 'k.', label='gw rates')\n",
    "plt.plot(alpha_arr, slope*alpha_arr + intercept, 'r-', label='gw fit')\n",
    "plt.xlabel(r'$\\alpha$ (power-law index)')\n",
    "plt.ylabel('rate per year')\n",
    "plt.legend()\n",
    "plt.grid(alpha=0.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The change in rate is significant and has a decreasing trend as $\\alpha$ increases.\n",
    "\n",
    "* Increasing the value of $\\alpha$ results in more BBH events is mass range [15, 30] $M_{\\odot}$\n",
    "\n",
    "* You can repeat the same test for other parameters as well.\n",
    "\n",
    "* You can repeat the same test for 3G detectors as well."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## BNS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from ler.rates import GWRATES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # initialization\n",
    "ler = GWRATES(verbose=False, event_type='BNS')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'binary_masses_BBH_popI_II_powerlaw_gaussian': {'mminbh': 4.98,\n",
       "  'mmaxbh': 112.5,\n",
       "  'alpha': 3.78,\n",
       "  'mu_g': 32.27,\n",
       "  'sigma_g': 3.88,\n",
       "  'lambda_peak': 0.03,\n",
       "  'delta_m': 4.8,\n",
       "  'beta': 0.81},\n",
       " 'binary_masses_BBH_popIII_lognormal': {'Mc': 30.0, 'sigma': 0.3, 'beta': 1.1},\n",
       " 'binary_masses_BBH_primordial_lognormal': {'Mc': 30.0,\n",
       "  'sigma': 0.3,\n",
       "  'beta': 1.1},\n",
       " 'binary_masses_BNS_gwcosmo': {'mminns': 1.0, 'mmaxns': 3.0, 'alphans': 0.0},\n",
       " 'binary_masses_BNS_bimodal': {'w': 0.643,\n",
       "  'muL': 1.352,\n",
       "  'sigmaL': 0.08,\n",
       "  'muR': 1.88,\n",
       "  'sigmaR': 0.3,\n",
       "  'mmin': 1.0,\n",
       "  'mmax': 2.3}}"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ler.available_gw_prior_list_and_its_params['source_frame_masses']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "binary_masses_BNS_bimodal interpolator will be loaded from ./interpolator_pickle/binary_masses_BNS_bimodal/binary_masses_BNS_bimodal_0.pickle\n",
      "binary_masses_BNS_bimodal interpolator will be loaded from ./interpolator_pickle/binary_masses_BNS_bimodal/binary_masses_BNS_bimodal_1.pickle\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# with default value\n",
    "ler.sample_source_frame_masses = lambda size: ler.binary_masses_BNS_bimodal(size=size, mmax=2.3)\n",
    "\n",
    "# plot \n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.hist(ler.sample_source_frame_masses(10000)[0], bins=100, histtype='step', color='k', density=True, label='mmax=2.3')\n",
    "\n",
    "# with custom value\n",
    "ler.sample_source_frame_masses = lambda size: ler.binary_masses_BNS_bimodal(size=size, mmax=3)\n",
    "\n",
    "# plot\n",
    "plt.hist(ler.sample_source_frame_masses(10000)[0], bins=100, histtype='step', color='r', density=True, label='mmax=3')\n",
    "plt.xlabel(r'$m_1$ (Bigger mass of the binary in $M_{\\odot}$)')\n",
    "plt.ylabel('pdf')\n",
    "\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Un-lensed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " iteration:  0\n",
      "gw rate (mmax=2.3): 1.9669350348684111\n",
      "\n",
      " iteration:  1\n",
      "gw rate (mmax=2.4749999999999996): 2.898641104016606\n",
      "\n",
      " iteration:  2\n",
      "gw rate (mmax=2.65): 2.5880724143005414\n",
      "\n",
      " iteration:  3\n",
      "gw rate (mmax=2.825): 3.8821086214508123\n",
      "\n",
      " iteration:  4\n",
      "gw rate (mmax=3.0): 2.691595310872563\n"
     ]
    }
   ],
   "source": [
    "mmax_arr = np.linspace(2.3, 3, 5)\n",
    "gw_rates_bns = np.zeros_like(mmax_arr)\n",
    "sample_size = 2000000  # increase the sample size to 2 million for better statistics\n",
    "ler.batch_size = 100000\n",
    "\n",
    "# let's suppress some of the print outputs\n",
    "import contextlib\n",
    "\n",
    "for i, mmax in enumerate(mmax_arr):\n",
    "    print(\"\\n iteration: \", i)\n",
    "    ler.sample_source_frame_masses = lambda size: ler.binary_masses_BNS_bimodal(size=size, mmax=mmax)\n",
    "\n",
    "    # un-lensed\n",
    "    with contextlib.redirect_stdout(None):  # suppress print output\n",
    "        ler.gw_cbc_statistics(size=sample_size);\n",
    "        rate,_ = ler.gw_rate(output_jsonfile=\"gw_param_bns_detectable_\"+str(i)+\".json\")\n",
    "    gw_rates_bns[i] = rate\n",
    "    print(f'gw rate (mmax={mmax}): {rate}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gw rate: slope=1.3901646111100057, intercept=-0.8784657223397283, r_value=0.5535928457320664, p_value=0.33301505236005835, std_err=1.2073948295286805\n"
     ]
    },
    {
     "data": {
      "image/png": "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4U1Vo1KpkJ+fDzc3N8jlzf/aX0vrF7C8ni2tX8Dyema/zZ8xei4uLkbv3r1RWFgIZ2fnOrdrNAHktddew9atW7F37174+PjotM+SJUuwdOlSJCcno2vXrnVud+nSJbRv3x47duzA0KFDa6yvbQTE19cX+fn59X54+lAqlcjIyEBgYGCtIai5sbR+Acvr2dL6BSyvZ/bb/Bmj56KiIri5uT00gDSKUzCzZs3CL7/8gt27d+scPpYtW4YlS5Zgx44d9YYPAAgICIC7uzsyMjJqDSC2trawtbWtsVyhUBj0D6FcLjf4MRszS+sXsLyeLa1fwPJ6Zr/Nn6F71vU4Zg0gQgi88cYb2Lx5M5KTk+Gv41Nhly5dik8//RRJSUno1avXQ7fPycnB7du34e3t/aglExERkQGY9STXzJkz8Z///AdxcXFwcnJCXl4e8vLycP/+ffU2U6ZMwbx589SvP//8c3z44Yf497//jXbt2qn3KS4uBiCde5ozZw4OHDiArKws7Ny5ExEREQgMDER4eLjJeyQiIqKazBpAYmJiUFhYiNDQUHh7e6t/fvzxR/U22dnZyM3N1dqnvLwc48aN09pn2bJlAKShn5MnT2Ls2LF4/PHHMW3aNPTs2RN79uyp9TQLERERmZ7ZT8E8THJystbrrKysere3t7dHUlLSI1RFRERExmYZ9xkRERFRo8IAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCbHAEJEREQmxwBCREREJscAQkRERCZn1gCyePFi9O7dG05OTvDw8EBkZCQuXLjw0P0SEhLwxBNPwM7ODsHBwfjtt9+01gsh8NFHH8Hb2xv29vYICwtDenq6sdogIiIiPZk1gKSkpGDmzJk4cOAAtm/fjoqKCgwbNgwlJSV17rN//35MmjQJ06ZNw7FjxxAZGYnIyEicPn1avc3SpUvxj3/8A19//TXS0tLg4OCA8PBwlJaWmqItIiIieggrc755YmKi1uvvvvsOHh4eOHLkCAYNGlTrPitXrsTw4cMxZ84c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UAgHBwfh4OAgAAhvb29x5MgRre0GDx4s3nrrLa3XAwYMUL+urKwUDg4O4sUXX1Qvy83NFQBEamqqKC4uFtbW1mLdunXq9eXl5aJ169Zi6dKlQggh7t69K2xsbER8fLx6m9u3bwt7e3ut937QzZs3BQBx6tSpWmutTtf3qH6MI0eOCAAiKyur1mPW9X6DBw8WPXr0qHfbwYMHi44dOwqVSqVe9t5774mOHTuqX/v5+Ynly5drHadbt27i448/rreG6st0+fyr9qn+vQohRO/evcV7772nfn3ixIl6Pw+ihuAICNEjOnHiBJ599lmt0YPs7GxMmDABLVq00Frm7+9v0tru378POzu7GsuffvppHD9+HMePH8fBgwcRHh6OESNG4MqVK/Uer/pFqgqFAq1atUJwcLB6maenJwDgxo0byMzMREVFBfr3769eb21tjT59+uDcuXMAgMzMTJSXl6Nv377qbdzc3NChQwet901PT8ekSZMQEBAAZ2dn9QW12dnZD/0MdH2P6rp164ahQ4ciODgY48ePx7fffos7d+489L0APHTECQCeeuopyGQy9euQkBCkp6dDqVTq9B660OXzr1L9ewUAb29v3LhxQ/3a3t4eANQjW0SGwABC9IiOHz+u9csNkEJJ9esuSktLceHCBXTr1g1ZWVno1q0bXnjhBQQFBeG1117Dli1b0LdvX3Tp0gXp6ekAgNGjR6Nnz57o0qUL1q1bBwBITU1Fnz59UFlZievXryMoKAh5eXl11ubu7l7rL04HBwcEBgYiMDAQvXv3xurVq1FSUoJvv/223l4fvMNCJpNpLav6parrqRFdjRkzBvn5+fj222+RlpaGtLQ0ANJFnsagUCiwfft2bN26FZ06dcI///lPdOjQAZcvX37ovg4ODo/8/nK5XOuaEACoqKh45OPWpbbvtfp3WHXK5rHHHjNaDWR5GECIHkFRURGysrLQo0cP9bLLly+jsLBQa9mpU6cghFCPFpw7dw4fffQRzp8/j+TkZOzbtw9paWl444038NVXXwEAvv/+exw5cgRpaWn49NNPUVZWhpCQEAwaNAiff/45Zs6ciY8++gheXl511tejRw+cPXv2oX3IZDLI5XLcv3+/oR9FDe3bt1dfC1GloqIChw4dQqdOndTbWFtbqwMFANy5cwcXL15Uv759+zYuXLiA+fPnY+jQoejYsaPOoxG6vkdtZDIZ+vfvj+joaBw7dgw2NjbYvHkzAMDGxuaRRiuq1wIABw4cQFBQEBQKBQDpF31ubq56fVFRUY3w87AadPn8dXX69Gn4+PjA3d1dr/2I6sN5QIgewYkTJ6BQKNClSxf1suPHj8PNzQ1+fn5ay9q3bw9HR0fcunULHTp0UJ8C6NixI8LCwgAAwcHB+O233wAAy5cvx88//wxAOtWQnZ2NoKAgLFq0CN27d0dgYCBefPHFeusLDw/HvHnzcOfOHbi6uqqXl5WVqUdO7ty5g6+++grFxcUYM2aMAT4ViYODA1577TXMmTMHbm5uaNu2LZYuXYp79+6pbwt2dHTEtGnTMGfOHLRq1QoeHh7429/+Brlc828jV1dXtGrVCqtWrYK3tzeys7Px/vvv61yHLu/xoLS0NOzcuRPDhg2Dh4cH0tLScPPmTXTs2BGAdJdKWloasrKy4OjoCDc3t3qP96Ds7Gy8/fbbmDFjBo4ePYp//vOfWnfmDBkyBN999x3GjBmDli1b4qOPPlKHkyq11VCdLp+/rvbs2YNhw4bptQ/RwzCAED2CEydOoEOHDlrXWZw4cUJr9KNqWbdu3dSvbW1t1f9fLperX8vlciiVSuzatUs9KmJnZ4devXqp70C4ceMGysvLcevWLSiVyhq/mKoLDg7Gk08+ifj4eMyYMUO9PDExEd7e3gAAJycnPPHEE0hISEBoaGjDP4xaLFmyBCqVCi+++CLu3r2LXr16ISkpSSsMffHFF+rw4+TkhHfeeQeFhYXq9XK5HOvXr8ebb76JLl26oEOHDvjHP/6hV60Pe48HOTs7Y/fu3VixYgWKiorg5+eHL7/8EiNGjAAAvPvuu3jppZfQqVMn3L9/H5cvX1Zfl6KLKVOm4P79++jTpw8UCgXeeustTJ8+Xb1+3rx5uHz5MkaPHg0XFxcsXLiwxghIbTU8SJfP/2FKS0uxZcsWJCYm6rwPkS5k4sETjURkVFlZWRg3bhwOHz4MABg3bhxmzZqF0NBQHDhwAIsWLcKrr76K//znP0hISMDx48fRu3dvHDt2DF26dEF4eDjefPNNJCYmwtfXF3Pnzq33/X799VfMmTMHp0+f1utf6USAdHv55s2bsW3bNnOXQs0MR0CIGqHhw4cjJiYGnTp1QufOndV3VsTGxsLDwwOjRo1CaGgo+vTpg4iIiHrv6Bg1ahTS09Pxxx9/1DpXBFF9rK2t8c9//tPcZVAzxBEQIiIiMjmOxxIREZHJMYAQERGRyTGAEBERkckxgBAREZHJMYAQERGRyTGAEBERkckxgBAREZHJMYAQERGRyTGAEBERkckxgBAREZHJMYAQERGRyf1/enwoSRzg4u0AAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# linear fit to the rates\n",
    "from scipy.stats import linregress\n",
    "\n",
    "slope, intercept, r_value, p_value, std_err = linregress(mmax_arr, gw_rates_bns)\n",
    "print(f'gw rate: slope={slope}, intercept={intercept}, r_value={r_value}, p_value={p_value}, std_err={std_err}')\n",
    "\n",
    "# gw_rates vs mmax\n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.plot(mmax_arr, gw_rates_bns, 'k.', label='gw rates')\n",
    "plt.plot(mmax_arr, slope*mmax_arr + intercept, 'r-', label='gw fit')\n",
    "plt.xlabel(r'$m_{\\max}$ (Bimodal distribution)')\n",
    "plt.ylabel('rate per year')\n",
    "plt.legend()\n",
    "plt.grid(alpha=0.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* rate and $m_max$ does not have a strong linear relationship, but an increasing trend is observed.\n",
    "\n",
    "* The rate is higher for higher $m_{\\text{max}}$ values. This is because higher mass BBHs have higher SNRs and are detectable at larger distances."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hubble constant (H0): 67.66 km / (Mpc s)\n",
      "Matter density parameter (Om0): 0.30966\n",
      "Dark energy density parameter (Ode0): 0.6888463055445441\n"
     ]
    }
   ],
   "source": [
    "from astropy.cosmology import Planck18\n",
    "\n",
    "# Accessing cosmological parameters\n",
    "H0 = Planck18.H0\n",
    "Om0 = Planck18.Om0\n",
    "Ode0 = Planck18.Ode0\n",
    "\n",
    "print(f\"Hubble constant (H0): {H0}\")\n",
    "print(f\"Matter density parameter (Om0): {Om0}\")\n",
    "print(f\"Dark energy density parameter (Ode0): {Ode0}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hubble constant (H0): 70.0 km / (Mpc s)\n",
      "Matter density parameter (Om0): 0.3\n",
      "Dark energy density parameter (Ode0): 0.7\n"
     ]
    }
   ],
   "source": [
    "from astropy.cosmology import LambdaCDM\n",
    "cosmo = LambdaCDM(H0=70, Om0=0.3, Ode0=0.7)\n",
    "\n",
    "# Accessing cosmological parameters\n",
    "H0 = cosmo.H0\n",
    "Om0 = cosmo.Om0\n",
    "Ode0 = cosmo.Ode0\n",
    "\n",
    "print(f\"Hubble constant (H0): {H0}\")\n",
    "print(f\"Matter density parameter (Om0): {Om0}\")\n",
    "print(f\"Dark energy density parameter (Ode0): {Ode0}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "ler",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
